version: '3.9'
services:

  backend:
    build: ./Backend
    environment:
      SPRING_PROFILES_ACTIVE: compose
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - webnet

  frontend:
    build: ./Frontend2
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - webnet

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: workout-app
    ports:
      - "27017:27017"
    volumes:
      - ./StartupScripts/mongodb/:/docker-entrypoint-initdb.d/:ro
    networks:
      - webnet
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgresfood
      PGUSER: postgres
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 2s
      retries: 10
    volumes:
      - ./StartupScripts/postgres/:/docker-entrypoint-initdb.d/:ro

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@zzz.pl
      PGADMIN_DEFAULT_PASSWORD: postgres
    depends_on:
      - postgres
    networks:
      - webnet

networks:
  webnet:
    name: webnet
    driver: bridge
